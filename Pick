---made by Revborn---
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local TeleportService = game:GetService("TeleportService")
local Lighting = game:GetService("Lighting")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

---made by Revborn---
local player = Players.LocalPlayer

local NIGHTS_99_GAME_ID = 126509999114328
local NIGHTS_99_LOBBY_ID = 79546208627805
local currentGame = nil

---made by Revborn---
local function detectGame()
    if game.PlaceId == NIGHTS_99_GAME_ID then
        return "99NIGHTS"
    elseif game.PlaceId == NIGHTS_99_LOBBY_ID then
        return "99NIGHTS_LOBBY"
    else
        return "UNSUPPORTED"
    end
end

---made by Revborn---
currentGame = detectGame()

local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

---made by Revborn---
local SAVE_KEY = "LostHub_SavedKey_99Nights_" .. player.UserId
local SAVE_TIMER_KEY = "LostHub_KeyTimer_99Nights_" .. player.UserId
local REQUIRED_KEYS = {"Revborn", "Makizen"}

---made by Revborn---
local function isKeySaved()
    if not (isfile and readfile and writefile) then return false end
    
    local keyFile = SAVE_KEY .. ".txt"
    local timerFile = SAVE_TIMER_KEY .. ".txt"
    
    if isfile(keyFile) and isfile(timerFile) then
        local savedKey = readfile(keyFile)
        local savedTimer = tonumber(readfile(timerFile)) or 0
        
        for _, validKey in pairs(REQUIRED_KEYS) do
            if savedKey == validKey and tick() < savedTimer then
                return true
            end
        end
        
        if isfile(keyFile) then
            delfile(keyFile)
        end
        if isfile(timerFile) then
            delfile(timerFile)
        end
    end
    
    return false
end

---made by Revborn---
local function saveKey(key)
    if not writefile then return end
    
    local randomTime = math.random(45 * 60, 60 * 60)
    local expireTime = tick() + randomTime
    
    writefile(SAVE_KEY .. ".txt", key)
    writefile(SAVE_TIMER_KEY .. ".txt", tostring(expireTime))
end

---made by Revborn---
local function create99NightsLobbyScreen()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "NightsLobbyScreen"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = player:WaitForChild("PlayerGui")
    
    local blurEffect = Instance.new("BlurEffect")
    blurEffect.Size = 24
    blurEffect.Parent = Lighting
    
    local blurFrame = Instance.new("Frame")
    blurFrame.Size = UDim2.new(1, 0, 1, 0)
    blurFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    blurFrame.BackgroundTransparency = 0.5
    blurFrame.BorderSizePixel = 0
    blurFrame.Parent = screenGui
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = isMobile and UDim2.new(0, 400, 0, 300) or UDim2.new(0, 450, 0, 280)
    mainFrame.Position = UDim2.new(0.5, -mainFrame.Size.X.Offset/2, 0.5, -mainFrame.Size.Y.Offset/2)
    mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 20)
    corner.Parent = mainFrame
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(100, 100, 100)
    stroke.Thickness = 2
    stroke.Parent = mainFrame
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, -40, 0, 60)
    title.Position = UDim2.new(0, 20, 0, 20)
    title.BackgroundTransparency = 1
    title.Text = "Join the game first"
    title.TextColor3 = Color3.fromRGB(255, 100, 100)
    title.TextSize = isMobile and 28 or 32
    title.Font = Enum.Font.GothamBold
    title.Parent = mainFrame
    
    local message = Instance.new("TextLabel")
    message.Size = UDim2.new(1, -40, 0, 80)
    message.Position = UDim2.new(0, 20, 0, 90)
    message.BackgroundTransparency = 1
    message.Text = "Please load into 99 nights game first! You're currently in the lobby."
    message.TextColor3 = Color3.fromRGB(255, 255, 255)
    message.TextSize = isMobile and 16 or 18
    message.Font = Enum.Font.Gotham
    message.TextWrapped = true
    message.Parent = mainFrame
    
    local okButton = Instance.new("TextButton")
    okButton.Size = UDim2.new(0, 120, 0, 40)
    okButton.Position = UDim2.new(0.5, -60, 1, -70)
    okButton.BackgroundColor3 = Color3.fromRGB(0, 162, 255)
    okButton.Text = "OK"
    okButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    okButton.TextSize = isMobile and 18 or 20
    okButton.Font = Enum.Font.GothamBold
    okButton.Parent = mainFrame
    
    local okCorner = Instance.new("UICorner")
    okCorner.CornerRadius = UDim.new(0, 12)
    okCorner.Parent = okButton
    
    okButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
        if blurEffect and blurEffect.Parent then
            blurEffect:Destroy()
        end
    end)
    
    return screenGui, blurEffect
end

---made by Revborn---
local function createUnsupportedGameScreen()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "UnsupportedGameScreen"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = player:WaitForChild("PlayerGui")
    
    local blurEffect = Instance.new("BlurEffect")
    blurEffect.Size = 24
    blurEffect.Parent = Lighting
    
    local blurFrame = Instance.new("Frame")
    blurFrame.Size = UDim2.new(1, 0, 1, 0)
    blurFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    blurFrame.BackgroundTransparency = 0.5
    blurFrame.BorderSizePixel = 0
    blurFrame.Parent = screenGui
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = isMobile and UDim2.new(0, 400, 0, 300) or UDim2.new(0, 450, 0, 320)
    mainFrame.Position = UDim2.new(0.5, -mainFrame.Size.X.Offset/2, 0.5, -mainFrame.Size.Y.Offset/2)
    mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 20)
    corner.Parent = mainFrame
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(100, 100, 100)
    stroke.Thickness = 2
    stroke.Parent = mainFrame
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, -40, 0, 60)
    title.Position = UDim2.new(0, 20, 0, 20)
    title.BackgroundTransparency = 1
    title.Text = "Game Not Supported"
    title.TextColor3 = Color3.fromRGB(255, 100, 100)
    title.TextSize = isMobile and 28 or 32
    title.Font = Enum.Font.GothamBold
    title.Parent = mainFrame
    
    local message = Instance.new("TextLabel")
    message.Size = UDim2.new(1, -40, 0, 80)
    message.Position = UDim2.new(0, 20, 0, 90)
    message.BackgroundTransparency = 1
    message.Text = "This script is only compatible with 99 Nights. Please join the game to use Lost Hub."
    message.TextColor3 = Color3.fromRGB(255, 255, 255)
    message.TextSize = isMobile and 16 or 18
    message.Font = Enum.Font.Gotham
    message.TextWrapped = true
    message.Parent = mainFrame
    
    local discordBtn = Instance.new("TextButton")
    discordBtn.Size = UDim2.new(0, 180, 0, 50)
    discordBtn.Position = UDim2.new(0.5, -90, 0, 180)
    discordBtn.BackgroundColor3 = Color3.fromRGB(88, 101, 242)
    discordBtn.Text = "Join Discord"
    discordBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    discordBtn.TextSize = isMobile and 16 or 18
    discordBtn.Font = Enum.Font.GothamBold
    discordBtn.Parent = mainFrame
    
    local discordCorner = Instance.new("UICorner")
    discordCorner.CornerRadius = UDim.new(0, 12)
    discordCorner.Parent = discordBtn
    
    local nightsBtn = Instance.new("TextButton")
    nightsBtn.Size = UDim2.new(0, 180, 0, 50)
    nightsBtn.Position = UDim2.new(0.5, -90, 0, 240)
    nightsBtn.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
    nightsBtn.Text = "Join 99 Nights"
    nightsBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    nightsBtn.TextSize = isMobile and 16 or 18
    nightsBtn.Font = Enum.Font.GothamBold
    nightsBtn.Parent = mainFrame
    
    local nightsCorner = Instance.new("UICorner")
    nightsCorner.CornerRadius = UDim.new(0, 12)
    nightsCorner.Parent = nightsBtn
    
    discordBtn.MouseButton1Click:Connect(function()
        if setclipboard then
            setclipboard("https://discord.gg/BvYXdXFwjV")
        end
    end)
    
    nightsBtn.MouseButton1Click:Connect(function()
        TeleportService:Teleport(NIGHTS_99_LOBBY_ID, player)
    end)
    
    return screenGui, blurEffect
end

---made by Revborn---
local function createIntroScreen()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "LostHubIntro"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = player:WaitForChild("PlayerGui")
    
    local blurEffect = Instance.new("BlurEffect")
    blurEffect.Size = 24
    blurEffect.Parent = Lighting
    
    local blurFrame = Instance.new("Frame")
    blurFrame.Size = UDim2.new(1, 0, 1, 0)
    blurFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    blurFrame.BackgroundTransparency = 0.3
    blurFrame.BorderSizePixel = 0
    blurFrame.Parent = screenGui
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 400, 0, 200)
    mainFrame.Position = UDim2.new(0.5, -200, 0.5, -100)
    mainFrame.BackgroundTransparency = 1
    mainFrame.Parent = screenGui
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0.5, 0)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "Lost Hub"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextSize = 48
    title.Font = Enum.Font.GothamBold
    title.TextTransparency = 1
    title.Parent = mainFrame
    
    local subtitle = Instance.new("TextLabel")
    subtitle.Size = UDim2.new(1, 0, 0.5, 0)
    subtitle.Position = UDim2.new(0, 0, 0.5, 0)
    subtitle.BackgroundTransparency = 1
    subtitle.Text = "Made by 生まれ変わった"
    subtitle.TextColor3 = Color3.fromRGB(150, 150, 150)
    subtitle.TextSize = 20
    subtitle.Font = Enum.Font.Gotham
    subtitle.TextTransparency = 1
    subtitle.Parent = mainFrame
    
    local titleTween = TweenService:Create(title, TweenInfo.new(1, Enum.EasingStyle.Quad), {TextTransparency = 0})
    titleTween:Play()
    
    task.wait(0.5)
    local subtitleTween = TweenService:Create(subtitle, TweenInfo.new(1, Enum.EasingStyle.Quad), {TextTransparency = 0})
    subtitleTween:Play()
    
    task.wait(2.5)
    local fadeOutTitle = TweenService:Create(title, TweenInfo.new(0.5, Enum.EasingStyle.Quad), {TextTransparency = 1})
    local fadeOutSubtitle = TweenService:Create(subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Quad), {TextTransparency = 1})
    fadeOutTitle:Play()
    fadeOutSubtitle:Play()
    
    task.wait(0.5)
    screenGui:Destroy()
    if blurEffect and blurEffect.Parent then
        blurEffect:Destroy()
    end
    
    return true
end

---made by Revborn---
if currentGame == "99NIGHTS_LOBBY" then
    create99NightsLobbyScreen()
    return
end

---made by Revborn---
if currentGame == "UNSUPPORTED" then
    createUnsupportedGameScreen()
    return
end

---made by Revborn---
local Window = nil
local hubLoaded = false

local selectedCreature = "Bear"
local selectedItem = ""
local selectedESPCreature = ""
local selectedPlayerForTP = ""
local espEnabled = false
local allESPEnabled = false
local playerESPEnabled = false
local infiniteJumpEnabled = false
local infiniteJumpConnection = nil
local killAuraEnabled = false
local killAuraConnection = nil
local killAuraRange = 50
local playerSpeed = 16
local playerJumpPower = 50
local noclipEnabled = false
local noclipConnection = nil
local mapHighlightEnabled = false
local mapHighlight = nil
local hitboxSize = 70
local originalHitboxSizes = {}
local modifiedCreatures = {}

---made by Revborn---
local espData = {}
local playerESPData = {}
local espRefreshConnection = nil
local espUpdateTimer = 0

local creatureNames = {
    "Arctic Fox", "Mammoth", "The Owl", "Polar Bear", "The Deer",
    "Alien", "Alien Elite", "Cultist", "Crossbow Cultist", 
    "Juggernaut Cultist", "Wolf", "Alpha Wolf", "Bear", "Bunny"
}

---made by Revborn---
local function scanWorkspaceForCreatures()
    local foundCreatures = {}
    
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Model") and obj:FindFirstChildOfClass("Humanoid") then
            local objName = obj.Name
            local found = false
            
            for _, knownCreature in pairs(creatureNames) do
                if objName:lower():find(knownCreature:lower()) or 
                   objName:lower():find(knownCreature:lower():gsub("the ", "")) or
                   objName:lower():find(knownCreature:lower():gsub(" ", "")) then
                    found = true
                    break
                end
            end
            
            if found and not foundCreatures[objName] then
                foundCreatures[objName] = true
            end
        end
    end
    
    local result = {}
    for name, _ in pairs(foundCreatures) do
        table.insert(result, name)
    end
    
    table.sort(result)
    return result
end

---made by Revborn---
local function scanWorkspaceForItems()
    local foundItems = {}
    local itemTypes = {
        "wood", "log", "logs", "stone", "rock", "coin", "gem", "crystal", 
        "berry", "fruit", "meat", "bone", "stick", "branch",
        "mushroom", "herb", "flower", "seed", "nut"
    }
    
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Part") or obj:IsA("Model") then
            local objName = obj.Name:lower()
            
            for _, itemType in pairs(itemTypes) do
                if objName:find(itemType) then
                    local found = false
                    for _, existingItem in pairs(foundItems) do
                        if existingItem == obj.Name then
                            found = true
                            break
                        end
                    end
                    if not found then
                        table.insert(foundItems, obj.Name)
                    end
                    break
                end
            end
        end
    end
    
    table.sort(foundItems)
    return foundItems
end

---made by Revborn---
local function findWorkspaceItems()
    local foundItems = {}
    
    for _, obj in pairs(workspace.Items:GetChildren()) do
        if obj:IsA("Part") then
            local objName = obj.Name
            if objName == "Log" or objName == "Logs" or objName == "Wood" or 
               objName:lower():find("log") or objName == "TreeLog" or objName == "WoodLog" then
                table.insert(foundItems, obj)
            end
        elseif obj:IsA("Model") then
            local objName = obj.Name
            if objName == "Log" or objName == "Logs" or objName == "Wood" or 
               objName:lower():find("log") or objName == "TreeLog" or objName == "WoodLog" then
                table.insert(foundItems, obj)
            end
        end
    end
    
    return foundItems
end

---made by Revborn---
local function findCreaturesInWorkspace(creatureName)
    local foundCreatures = {}
    local searchPatterns = {
        creatureName:lower(),
        creatureName:lower():gsub("the ", ""),
        creatureName:lower():gsub(" ", "")
    }
    
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Model") and obj:FindFirstChildOfClass("Humanoid") then
            local objName = obj.Name:lower()
            
            for _, pattern in pairs(searchPatterns) do
                if objName:find(pattern) or objName == pattern then
                    table.insert(foundCreatures, obj)
                    break
                end
            end
        end
    end
    
    return foundCreatures
end

---made by Revborn---
local function modifyCreatureHitbox(creatureName, newSize)
    local creatures = findCreaturesInWorkspace(creatureName)
    local modifiedCount = 0
    
    for _, creature in pairs(creatures) do
        if creature and creature.Parent and creature ~= player.Character then
            if not originalHitboxSizes[creature] then
                originalHitboxSizes[creature] = {}
            end
            
            local mainPart = creature:FindFirstChild("HumanoidRootPart") or 
                            creature:FindFirstChild("Torso") or
                            creature:FindFirstChildOfClass("BasePart")
            
            if mainPart then
                for _, existingHitbox in pairs(creature:GetChildren()) do
                    if existingHitbox.Name == "CustomHitbox" then
                        existingHitbox:Destroy()
                    end
                end
                
                local hitboxPart = Instance.new("Part")
                hitboxPart.Name = "CustomHitbox"
                hitboxPart.Size = Vector3.new(newSize, newSize, newSize)
                hitboxPart.CFrame = mainPart.CFrame
                hitboxPart.Anchored = false
                hitboxPart.CanCollide = false
                hitboxPart.Transparency = 1
                hitboxPart.Material = Enum.Material.ForceField
                hitboxPart.Parent = creature
                
                local weld = Instance.new("WeldConstraint")
                weld.Part0 = mainPart
                weld.Part1 = hitboxPart
                weld.Parent = hitboxPart
                
                originalHitboxSizes[creature][mainPart] = mainPart.Size
                modifiedCreatures[creature] = true
                modifiedCount = modifiedCount + 1
            end
        end
    end
    
    return modifiedCount > 0
end

---made by Revborn---
local function resetAllHitboxes()
    for creature, parts in pairs(originalHitboxSizes) do
        if creature and creature.Parent then
            for _, part in pairs(creature:GetChildren()) do
                if part.Name == "CustomHitbox" then
                    part:Destroy()
                end
            end
        end
    end
    
    originalHitboxSizes = {}
    modifiedCreatures = {}
end

---made by Revborn---
local function startKillAura()
    if killAuraConnection then return end
    
    killAuraConnection = RunService.Heartbeat:Connect(function()
        if not killAuraEnabled or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
            return
        end
        
        local playerPos = player.Character.HumanoidRootPart.Position
        local tool = player.Character:FindFirstChildOfClass("Tool")
        
        if not tool then
            for _, t in pairs(player.Backpack:GetChildren()) do
                if t:IsA("Tool") then
                    player.Character.Humanoid:EquipTool(t)
                    tool = t
                    break
                end
            end
        end
        
        if tool and tool:FindFirstChild("Handle") then
            for _, creature in pairs(workspace:GetDescendants()) do
                if creature:IsA("Model") and creature:FindFirstChildOfClass("Humanoid") and creature ~= player.Character then
                    local humanoid = creature:FindFirstChildOfClass("Humanoid")
                    if humanoid and humanoid.Health > 0 then
                        local creatureRoot = creature:FindFirstChild("HumanoidRootPart") or 
                                           creature:FindFirstChild("CustomHitbox") or 
                                           creature:FindFirstChildOfClass("BasePart")
                        
                        if creatureRoot then
                            local distance = (playerPos - creatureRoot.Position).Magnitude
                            if distance <= killAuraRange then
                                tool:Activate()
                                task.wait(0.05)
                                break
                            end
                        end
                    end
                end
            end
        end
    end)
end

---made by Revborn---
local function stopKillAura()
    if killAuraConnection then
        killAuraConnection:Disconnect()
        killAuraConnection = nil
    end
end

---made by Revborn---
local function createESPForCreature(creature)
    if not creature or not creature.Parent or espData[creature] then return end
    
    local rootPart = creature:FindFirstChild("HumanoidRootPart") or 
                    creature:FindFirstChild("Torso") or
                    creature:FindFirstChildOfClass("BasePart")
    
    if not rootPart then return end
    
    for _, child in pairs(creature:GetChildren()) do
        if child.Name == "LostESP_99Nights" then
            child:Destroy()
        end
    end
    
    local espBox = Instance.new("BoxHandleAdornment")
    espBox.Name = "LostESP_99Nights"
    espBox.Adornee = rootPart
    espBox.Size = rootPart.Size + Vector3.new(2, 2, 2)
    espBox.Color3 = Color3.fromRGB(255, 0, 0)
    espBox.Transparency = 0.5
    espBox.AlwaysOnTop = true
    espBox.ZIndex = 10
    espBox.Parent = creature
    
    local attachment0 = Instance.new("Attachment")
    attachment0.Parent = rootPart
    
    local attachment1 = Instance.new("Attachment")
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        attachment1.Parent = player.Character.HumanoidRootPart
        
        local beam = Instance.new("Beam")
        beam.Name = "LostESP_99Nights"
        beam.Attachment0 = attachment0
        beam.Attachment1 = attachment1
        beam.Color = ColorSequence.new(Color3.fromRGB(255, 255, 0))
        beam.Transparency = NumberSequence.new(0.5)
        beam.Width0 = 0.5
        beam.Width1 = 0.5
        beam.Parent = creature
    end
    
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "LostESP_99Nights"
    billboard.Parent = rootPart
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true
    
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Parent = billboard
    nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = creature.Name
    nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameLabel.TextStrokeTransparency = 0
    nameLabel.Font = Enum.Font.GothamBold
    nameLabel.TextSize = 14
    nameLabel.TextScaled = true
    
    local distanceLabel = Instance.new("TextLabel")
    distanceLabel.Parent = billboard
    distanceLabel.Size = UDim2.new(1, 0, 0.5, 0)
    distanceLabel.Position = UDim2.new(0, 0, 0.5, 0)
    distanceLabel.BackgroundTransparency = 1
    distanceLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
    distanceLabel.TextStrokeTransparency = 0
    distanceLabel.Font = Enum.Font.Gotham
    distanceLabel.TextSize = 12
    distanceLabel.TextScaled = true
    
    espData[creature] = {
        box = espBox, 
        billboard = billboard, 
        nameLabel = nameLabel,
        distanceLabel = distanceLabel,
        rootPart = rootPart
    }
end

---made by Revborn---
local function createESPForPlayer(targetPlayer)
    if not targetPlayer or targetPlayer == player or not targetPlayer.Character or playerESPData[targetPlayer] then return end
    
    local rootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end
    
    for _, child in pairs(targetPlayer.Character:GetChildren()) do
        if child.Name == "LostPlayerESP_99Nights" then
            child:Destroy()
        end
    end
    
    local espBox = Instance.new("BoxHandleAdornment")
    espBox.Name = "LostPlayerESP_99Nights"
    espBox.Adornee = rootPart
    espBox.Size = rootPart.Size + Vector3.new(2, 2, 2)
    espBox.Color3 = Color3.fromRGB(0, 255, 0)
    espBox.Transparency = 0.5
    espBox.AlwaysOnTop = true
    espBox.ZIndex = 10
    espBox.Parent = targetPlayer.Character
    
    local attachment0 = Instance.new("Attachment")
    attachment0.Parent = rootPart
    
    local attachment1 = Instance.new("Attachment")
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        attachment1.Parent = player.Character.HumanoidRootPart
        
        local beam = Instance.new("Beam")
        beam.Name = "LostPlayerESP_99Nights"
        beam.Attachment0 = attachment0
        beam.Attachment1 = attachment1
        beam.Color = ColorSequence.new(Color3.fromRGB(0, 255, 0))
        beam.Transparency = NumberSequence.new(0.5)
        beam.Width1 = 0.5
        beam.Parent = targetPlayer.Character
    end
    
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "LostPlayerESP_99Nights"
    billboard.Parent = rootPart
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true
    
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Parent = billboard
    nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = targetPlayer.Name
    nameLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
    nameLabel.TextStrokeTransparency = 0
    nameLabel.Font = Enum.Font.GothamBold
    nameLabel.TextSize = 14
    nameLabel.TextScaled = true
    
    local distanceLabel = Instance.new("TextLabel")
    distanceLabel.Parent = billboard
    distanceLabel.Size = UDim2.new(1, 0, 0.5, 0)
    distanceLabel.Position = UDim2.new(0, 0, 0.5, 0)
    distanceLabel.BackgroundTransparency = 1
    distanceLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
    distanceLabel.TextStrokeTransparency = 0
    distanceLabel.Font = Enum.Font.Gotham
    distanceLabel.TextSize = 12
    distanceLabel.TextScaled = true
    
    playerESPData[targetPlayer] = {
        box = espBox, 
        billboard = billboard, 
        nameLabel = nameLabel,
        distanceLabel = distanceLabel,
        rootPart = rootPart
    }
end

---made by Revborn---
local function updateESPDistances()
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
    
    local playerPos = player.Character.HumanoidRootPart.Position
    
    for creature, espInfo in pairs(espData) do
        if creature and creature.Parent and espInfo.rootPart and espInfo.rootPart.Parent then
            local distance = (playerPos - espInfo.rootPart.Position).Magnitude
            espInfo.distanceLabel.Text = math.floor(distance) .. " studs"
        end
    end
    
    for targetPlayer, espInfo in pairs(playerESPData) do
        if targetPlayer and targetPlayer.Character and espInfo.rootPart and espInfo.rootPart.Parent then
            local distance = (playerPos - espInfo.rootPart.Position).Magnitude
            espInfo.distanceLabel.Text = math.floor(distance) .. " studs"
        end
    end
end

---made by Revborn---
local function startESPAutoRefresh()
    if espRefreshConnection then return end
    
    espRefreshConnection = RunService.Heartbeat:Connect(function()
        espUpdateTimer = espUpdateTimer + 1
        
        if espUpdateTimer >= 300 then
            espUpdateTimer = 0
            
            if allESPEnabled then
                local allCreatures = scanWorkspaceForCreatures()
                for _, creatureName in pairs(allCreatures) do
                    local creatures = findCreaturesInWorkspace(creatureName)
                    for _, creature in pairs(creatures) do
                        if not espData[creature] then
                            createESPForCreature(creature)
                        end
                    end
                end
            elseif espEnabled and selectedESPCreature ~= "" then
                local creatures = findCreaturesInWorkspace(selectedESPCreature)
                for _, creature in pairs(creatures) do
                    if not espData[creature] then
                        createESPForCreature(creature)
                    end
                end
            end
            
            if playerESPEnabled then
                for _, targetPlayer in pairs(Players:GetPlayers()) do
                    if targetPlayer ~= player and targetPlayer.Character and not playerESPData[targetPlayer] then
                        createESPForPlayer(targetPlayer)
                    end
                end
            end
        end
        
        if espUpdateTimer % 30 == 0 then
            updateESPDistances()
        end
    end)
end

---made by Revborn---
local function stopESPAutoRefresh()
    if espRefreshConnection then
        espRefreshConnection:Disconnect()
        espRefreshConnection = nil
    end
end

---made by Revborn---
local function removeESPFromCreature(creature)
    if espData[creature] then
        espData[creature] = nil
    end
    
    for _, child in pairs(creature:GetChildren()) do
        if child.Name == "LostESP_99Nights" then
            child:Destroy()
        end
    end
    
    if creature:FindFirstChild("HumanoidRootPart") then
        for _, child in pairs(creature.HumanoidRootPart:GetChildren()) do
            if child.Name == "LostESP_99Nights" then
                child:Destroy()
            end
        end
    end
end

---made by Revborn---
local function removeESPFromPlayer(targetPlayer)
    if playerESPData[targetPlayer] then
        playerESPData[targetPlayer] = nil
    end
    
    if targetPlayer.Character then
        for _, child in pairs(targetPlayer.Character:GetChildren()) do
            if child.Name == "LostPlayerESP_99Nights" then
                child:Destroy()
            end
        end
        
        if targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            for _, child in pairs(targetPlayer.Character.HumanoidRootPart:GetChildren()) do
                if child.Name == "LostPlayerESP_99Nights" then
                    child:Destroy()
                end
            end
        end
    end
end

---made by Revborn---
local function enableCreatureESP(creatureName)
    local creatures = findCreaturesInWorkspace(creatureName)
    for _, creature in pairs(creatures) do
        createESPForCreature(creature)
    end
    espEnabled = true
    startESPAutoRefresh()
end

---made by Revborn---
local function enableAllCreatureESP()
    local allCreatures = scanWorkspaceForCreatures()
    for _, creatureName in pairs(allCreatures) do
        local creatures = findCreaturesInWorkspace(creatureName)
        for _, creature in pairs(creatures) do
            createESPForCreature(creature)
        end
    end
    allESPEnabled = true
    startESPAutoRefresh()
end

---made by Revborn---
local function enableAllPlayerESP()
    for _, targetPlayer in pairs(Players:GetPlayers()) do
        if targetPlayer ~= player then
            createESPForPlayer(targetPlayer)
        end
    end
    playerESPEnabled = true
    startESPAutoRefresh()
end

---made by Revborn---
local function disableAllESP()
    espEnabled = false
    allESPEnabled = false
    playerESPEnabled = false
    stopESPAutoRefresh()
    
    for creature, _ in pairs(espData) do
        removeESPFromCreature(creature)
    end
    espData = {}
    
    for targetPlayer, _ in pairs(playerESPData) do
        removeESPFromPlayer(targetPlayer)
    end
    playerESPData = {}
    
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj.Name == "LostESP_99Nights" or obj.Name == "LostPlayerESP_99Nights" then
            obj:Destroy()
        end
    end
end

---made by Revborn---
local function toggleMapHighlight()
    if mapHighlightEnabled then
        if mapHighlight then
            mapHighlight:Destroy()
            mapHighlight = nil
        end
        mapHighlightEnabled = false
    else
        mapHighlight = Instance.new("ColorCorrectionEffect")
        mapHighlight.Name = "LostHubMapHighlight"
        mapHighlight.Brightness = 0.5
        mapHighlight.Contrast = 0.3
        mapHighlight.Saturation = 0.2
        mapHighlight.Parent = Lighting
        mapHighlightEnabled = true
    end
end

---made by Revborn---
local function spawnSelectedItem(itemName)
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    local referenceItem = nil
    
    if itemName:lower():find("log") then
        local searchNames = {"Log", "Logs", "log", "logs", "Wood", "TreeLog", "WoodLog"}
        
        for _, searchName in pairs(searchNames) do
            for _, obj in pairs(workspace:GetDescendants()) do
                if obj.Name == searchName and (obj:IsA("Part") or obj:IsA("Model")) then
                    referenceItem = obj
                    break
                end
            end
            if referenceItem then break end
        end
    else
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj.Name == itemName and (obj:IsA("Part") or obj:IsA("Model")) then
                referenceItem = obj
                break
            end
        end
    end
    
    if not referenceItem then
        return
    end
    
    local playerPos = player.Character.HumanoidRootPart.Position
    local spawnCount = math.random(8, 15)
    
    for i = 1, spawnCount do
        local angle = (i / spawnCount) * math.pi * 2
        local distance = math.random(10, 30)
        local spawnPos = playerPos + Vector3.new(
            math.cos(angle) * distance,
            math.random(2, 8),
            math.sin(angle) * distance
        )
        
        local newItem
        if referenceItem:IsA("Part") then
            newItem = referenceItem:Clone()
            newItem.Position = spawnPos
            newItem.Anchored = false
            newItem.CanCollide = true
            newItem.Parent = workspace.Items
        elseif referenceItem:IsA("Model") then
            newItem = referenceItem:Clone()
            if newItem:FindFirstChild("HumanoidRootPart") then
                newItem.HumanoidRootPart.Position = spawnPos
                newItem.HumanoidRootPart.Anchored = false
            elseif newItem:FindFirstChildOfClass("BasePart") then
                local mainPart = newItem:FindFirstChildOfClass("BasePart")
                mainPart.Position = spawnPos
                mainPart.Anchored = false
            end
            newItem.Parent = workspace.Items
        end
        
        task.wait(0.1)
    end
end

---made by Revborn---
local function teleportAllItemsToPlayer()
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    local playerPos = player.Character.HumanoidRootPart.Position
    local collected = 0
    
    local items = findWorkspaceItems()
    for _, item in pairs(items) do
        if collected >= 50 then break end
        
        if item:IsA("Part") then
            item.CFrame = CFrame.new(playerPos + Vector3.new(math.random(-3, 3), collected * 0.5, math.random(-3, 3)))
            collected = collected + 1
        elseif item:IsA("Model") and item:FindFirstChildOfClass("BasePart") then
            local mainPart = item:FindFirstChildOfClass("BasePart")
            item:SetPrimaryPartCFrame(CFrame.new(playerPos + Vector3.new(math.random(-3, 3), collected * 0.5, math.random(-3, 3))))
            collected = collected + 1
        end
        
        task.wait(0.05)
    end
    
    for _, obj in pairs(workspace:GetDescendants()) do
        if collected >= 100 then break end
        
        if obj:IsA("Part") then
            local name = obj.Name:lower()
            if name:find("wood") or name:find("coin") or name:find("gem") or name:find("crystal") or
               name:find("berry") or name:find("meat") or name:find("bone") then
                obj.CFrame = CFrame.new(playerPos + Vector3.new(math.random(-3, 3), collected * 0.3, math.random(-3, 3)))
                collected = collected + 1
                task.wait(0.05)
            end
        end
    end
end

---made by Revborn---
local function enableNoclip()
    if noclipEnabled then return end
    
    noclipEnabled = true
    
    noclipConnection = RunService.Stepped:Connect(function()
        if player.Character and noclipEnabled then
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                    
                    if part == player.Character:FindFirstChild("HumanoidRootPart") then
                        local vel = part.AssemblyLinearVelocity
                        if vel.Magnitude > 50 then
                            part.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                            part.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
                        end
                    end
                end
            end
        end
    end)
end

---made by Revborn---
local function disableNoclip()
    noclipEnabled = false
    
    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end
    
    if player.Character then
        for _, part in pairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
    end
end

---made by Revborn---
local function updatePlayerSpeed(speed)
    playerSpeed = speed
    if player.Character and player.Character:FindFirstChild("Humanoid") then
        player.Character.Humanoid.WalkSpeed = speed
    end
end

---made by Revborn---
local function updatePlayerJumpPower(power)
    playerJumpPower = power
    if player.Character and player.Character:FindFirstChild("Humanoid") then
        player.Character.Humanoid.JumpPower = power
        player.Character.Humanoid.JumpHeight = power
    end
end

---made by Revborn---
local function enableInfiniteJump()
    if infiniteJumpEnabled then return end
    
    infiniteJumpEnabled = true
    
    infiniteJumpConnection = UserInputService.JumpRequest:Connect(function()
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end)
end

---made by Revborn---
local function disableInfiniteJump()
    infiniteJumpEnabled = false
    
    if infiniteJumpConnection then
        infiniteJumpConnection:Disconnect()
        infiniteJumpConnection = nil
    end
end

---made by Revborn---
local function teleportToPlayer(targetPlayerName)
    local targetPlayer = Players:FindFirstChild(targetPlayerName)
    if not targetPlayer then
        return
    end
    
    if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    player.Character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -5)
end

---made by Revborn---
local function tweenToPlayer(targetPlayerName)
    local targetPlayer = Players:FindFirstChild(targetPlayerName)
    if not targetPlayer then
        return
    end
    
    if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    local targetPos = targetPlayer.Character.HumanoidRootPart.Position
    local tweenInfo = TweenInfo.new(3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = TweenService:Create(
        player.Character.HumanoidRootPart,
        tweenInfo,
        {CFrame = CFrame.new(targetPos + Vector3.new(0, 0, -5))}
    )
    
    tween:Play()
end

---made by Revborn---
local function createHub()
    if hubLoaded then return end
    hubLoaded = true
    
    local success, WindUI = pcall(function()
        return loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()
    end)
    
    if not success then
        return
    end

    Window = WindUI:CreateWindow({
        Title = "Lost Hub - 99 Nights",
        Icon = "rbxassetid://122913243559549",
        Author = "99 Nights Edition",
        Folder = "LostHub",
        Size = isMobile and UDim2.fromOffset(500, 400) or UDim2.fromOffset(580, 325),
        Transparent = true,
        Theme = "Dark",
        Resizable = true,
        SideBarWidth = isMobile and 150 or 200,
    })

    local tabs = {}
    
    tabs.CreditsTab = Window:Tab({Title = "Credits", Icon = "info"})
    tabs.EspTab = Window:Tab({Title = "ESP", Icon = "eye"})
    tabs.PlayerTab = Window:Tab({Title = "Player", Icon = "user"})
    tabs.CreaturesTab = Window:Tab({Title = "Creatures", Icon = "zap"})
    tabs.WorldTab = Window:Tab({Title = "World Features", Icon = "globe"})
    
    tabs.CreditsTab:Section({Title = "Team Credits"})
    
    local ownerImage = Instance.new("ImageLabel")
    ownerImage.Size = UDim2.new(0, 100, 0, 100)
    ownerImage.BackgroundTransparency = 1
    ownerImage.Image = "rbxassetid://79386418213324"
    
    tabs.CreditsTab:Paragraph({
        Title = "Picture of the Owner",
        Desc = "生まれ変わった - Creator and Main Developer"
    })
    
    tabs.CreditsTab:Paragraph({
        Title = "Script Developers",
        Desc = "• 生まれ変わった"
    })
    tabs.CreditsTab:Paragraph({
        Title = "Script Contributors",
        Desc = "• None"
    })
    tabs.CreditsTab:Paragraph({
        Title = "Testers",
        Desc = "• None"
    })
    
    tabs.CreditsTab:Section({Title = "More Details"})
    tabs.CreditsTab:Paragraph({
        Title = "Script Developers",
        Desc = "Responsible for creating and maintaining the entire script codebase, implementing new features, and ensuring compatibility across different games."
    })
    tabs.CreditsTab:Paragraph({
        Title = "Script Contributors",
        Desc = "Community members who contribute code improvements, bug fixes, and feature suggestions to enhance the script's functionality."
    })
    tabs.CreditsTab:Paragraph({
        Title = "Testers",
        Desc = "Dedicated individuals who test new features, report bugs, and provide feedback to ensure the script works reliably across different scenarios."
    })
    
    tabs.EspTab:Section({Title = "Creature ESP System"})
    
    local creatureESPDropdown = tabs.EspTab:Dropdown({
        Title = "Creatures",
        Values = scanWorkspaceForCreatures(),
        Multi = false,
        Default = 1,
        Callback = function(value)
            selectedESPCreature = value or ""
        end
    })
    
    task.spawn(function()
        while task.wait(5) do
            if creatureESPDropdown then
                local newCreatures = scanWorkspaceForCreatures()
                creatureESPDropdown:SetValues(newCreatures)
            end
        end
    end)
    
    tabs.EspTab:Toggle({
        Title = "ESP Creatures",
        Desc = "Add line and box on selected creature with distance and name",
        Default = false,
        Callback = function(state)
            if state and selectedESPCreature ~= "" then
                enableCreatureESP(selectedESPCreature)
            else
                espEnabled = false
                if not allESPEnabled and not playerESPEnabled then
                    disableAllESP()
                end
            end
        end
    })
    
    tabs.EspTab:Toggle({
        Title = "ESP All Creatures",
        Desc = "Add line and box on all creatures with distance and names",
        Default = false,
        Callback = function(state)
            allESPEnabled = state
            if state then
                enableAllCreatureESP()
            else
                if not espEnabled and not playerESPEnabled then
                    disableAllESP()
                end
            end
        end
    })
    
    tabs.EspTab:Toggle({
        Title = "ESP Players",
        Desc = "Add line and box on players with distance and usernames",
        Default = false,
        Callback = function(state)
            playerESPEnabled = state
            if state then
                enableAllPlayerESP()
            else
                for targetPlayer, _ in pairs(playerESPData) do
                    removeESPFromPlayer(targetPlayer)
                end
                playerESPData = {}
                if not espEnabled and not allESPEnabled then
                    stopESPAutoRefresh()
                end
            end
        end
    })
    
    tabs.PlayerTab:Section({Title = "Movement System"})
    
    tabs.PlayerTab:Slider({
        Title = "Speed",
        Step = 1,
        Value = {
            Min = 1,
            Max = 100,
            Default = 16,
        },
        Callback = function(value)
            updatePlayerSpeed(value)
        end
    })
    
    tabs.PlayerTab:Slider({
        Title = "Jump Power",
        Step = 1,
        Value = {
            Min = 1,
            Max = 200,
            Default = 50,
        },
        Callback = function(value)
            updatePlayerJumpPower(value)
        end
    })
    
    tabs.PlayerTab:Toggle({
        Title = "Infinite Jump",
        Desc = "Jump infinitely without touching the ground",
        Default = false,
        Callback = function(state)
            if state then
                enableInfiniteJump()
            else
                disableInfiniteJump()
            end
        end
    })
    
    tabs.PlayerTab:Toggle({
        Title = "Noclip",
        Desc = "Walk through walls with anti-cheat bypass",
        Default = false,
        Callback = function(state)
            if state then
                enableNoclip()
            else
                disableNoclip()
            end
        end
    })
    
    tabs.PlayerTab:Section({Title = "Player Teleportation"})
    
    local function getOnlinePlayers()
        local playerList = {}
        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                table.insert(playerList, plr.Name)
            end
        end
        return playerList
    end
    
    local playerTeleportDropdown = tabs.PlayerTab:Dropdown({
        Title = "Select Player to Teleport To",
        Values = getOnlinePlayers(),
        Multi = false,
        Default = 1,
        Callback = function(value)
            selectedPlayerForTP = value or ""
        end
    })
    
    task.spawn(function()
        while task.wait(3) do
            if playerTeleportDropdown then
                local newPlayers = getOnlinePlayers()
                playerTeleportDropdown:SetValues(newPlayers)
                
                if selectedPlayerForTP ~= "" then
                    local found = false
                    for _, name in pairs(newPlayers) do
                        if name == selectedPlayerForTP then
                            found = true
                            break
                        end
                    end
                    if not found then
                        selectedPlayerForTP = ""
                    end
                end
            end
        end
    end)
    
    tabs.PlayerTab:Button({
        Title = "Teleport to Player",
        Desc = "Instantly teleport to selected player",
        Callback = function()
            if selectedPlayerForTP ~= "" then
                teleportToPlayer(selectedPlayerForTP)
            end
        end
    })
    
    tabs.PlayerTab:Button({
        Title = "Tween to Player",
        Desc = "Smoothly tween to selected player",
        Callback = function()
            if selectedPlayerForTP ~= "" then
                tweenToPlayer(selectedPlayerForTP)
            end
        end
    })
    
    tabs.CreaturesTab:Section({Title = "Dynamic Creature System"})
    
    local creatureDropdown = tabs.CreaturesTab:Dropdown({
        Title = "Select Creature",
        Values = scanWorkspaceForCreatures(),
        Multi = false,
        Default = 1,
        Callback = function(value)
            selectedCreature = value or "Bear"
        end
    })
    
    task.spawn(function()
        while task.wait(5) do
            if creatureDropdown then
                local newCreatures = scanWorkspaceForCreatures()
                creatureDropdown:SetValues(newCreatures)
            end
        end
    end)
    
    tabs.CreaturesTab:Slider({
        Title = "Hitbox Size",
        Step = 1,
        Value = {
            Min = 1,
            Max = 10000,
            Default = 70,
        },
        Callback = function(value)
            hitboxSize = value
        end
    })
    
    tabs.CreaturesTab:Button({
        Title = "Modify Creature Hitbox",
        Desc = "Create invisible hitbox for selected creature",
        Callback = function()
            modifyCreatureHitbox(selectedCreature, hitboxSize)
        end
    })
    
    tabs.CreaturesTab:Button({
        Title = "Modify ALL Creatures",
        Desc = "Apply hitbox to all creatures (1 of each type)",
        Callback = function()
            local allCreatures = scanWorkspaceForCreatures()
            local totalModified = 0
            
            for _, creatureName in pairs(allCreatures) do
                if modifyCreatureHitbox(creatureName, hitboxSize) then
                    totalModified = totalModified + 1
                end
                task.wait(0.2)
            end
        end
    })
    
    tabs.CreaturesTab:Button({
        Title = "Reset All Hitboxes",
        Desc = "Restore all creatures to original sizes",
        Callback = function()
            resetAllHitboxes()
        end
    })
    
    tabs.CreaturesTab:Section({Title = "Kill Aura System"})
    
    tabs.CreaturesTab:Slider({
        Title = "Kill Aura Range",
        Step = 1,
        Value = {
            Min = 10,
            Max = 200,
            Default = 50,
        },
        Callback = function(value)
            killAuraRange = value
        end
    })
    
    tabs.CreaturesTab:Toggle({
        Title = "Kill Aura",
        Desc = "Automatically attack creatures when they get close",
        Default = false,
        Callback = function(state)
            killAuraEnabled = state
            if state then
                startKillAura()
            else
                stopKillAura()
            end
        end
    })
    
    tabs.WorldTab:Section({Title = "Map Features"})
    
    tabs.WorldTab:Toggle({
        Title = "Highlight Map",
        Desc = "Toggle map brightness for better visibility",
        Default = false,
        Callback = function(state)
            if state ~= mapHighlightEnabled then
                toggleMapHighlight()
            end
        end
    })
    
    tabs.WorldTab:Section({Title = "Item Spawning & Collection"})
    
    local itemDropdown = tabs.WorldTab:Dropdown({
        Title = "Select Item to Spawn",
        Values = scanWorkspaceForItems(),
        Multi = false,
        Default = 1,
        Callback = function(value)
            selectedItem = value or ""
        end
    })
    
    task.spawn(function()
        while task.wait(5) do
            if itemDropdown then
                local newItems = scanWorkspaceForItems()
                itemDropdown:SetValues(newItems)
            end
        end
    end)
    
    tabs.WorldTab:Button({
        Title = "Spawn Selected Item",
        Desc = "Spawns the selected item with proper log support",
        Callback = function()
            if selectedItem ~= "" then
                spawnSelectedItem(selectedItem)
            end
        end
    })
    
    tabs.WorldTab:Button({
        Title = "Teleport All Items to You",
        Desc = "Reset physics and teleport all logs and collectibles to your position",
        Callback = function()
            teleportAllItemsToPlayer()
        end
    })
    
    tabs.WorldTab:Button({
        Title = "Clear All Spawned Items",
        Desc = "Remove all spawned items from workspace",
        Callback = function()
            if selectedItem ~= "" then
                local removed = 0
                for _, obj in pairs(workspace.Items:GetChildren()) do
                    if obj.Name == selectedItem or obj.Name == "Log" or obj.Name == "Logs" or 
                       obj.Name == "Wood" or obj.Name == "TreeLog" or obj.Name == "WoodLog" then
                        obj:Destroy()
                        removed = removed + 1
                    end
                end
            end
        end
    })
end

---made by Revborn---
local function createToggleButton()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "LostToggle"
    screenGui.Parent = game.CoreGui
    screenGui.ResetOnSpawn = false

    local button = Instance.new("ImageButton")
    button.Size = isMobile and UDim2.new(0, 55, 0, 55) or UDim2.new(0, 50, 0, 50)
    button.Position = UDim2.new(0, 50, 0, 50)
    button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    button.BackgroundTransparency = 0.2
    button.Image = "rbxassetid://122913243559549"
    button.Parent = screenGui
    
    local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0.5, 0)
    corner.Parent = button
    
    local stroke = Instance.new("UIStroke")
    stroke.Thickness = 3
    stroke.Color = Color3.new(1, 1, 1)
    stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    stroke.Parent = button
    
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = button.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            button.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    
    local isOpen = true
    button.MouseButton1Click:Connect(function()
        if Window then
            if isOpen then
                Window:Close()
                button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                button.BackgroundTransparency = 0.5
                isOpen = false
            else
                Window:Open()
                button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                button.BackgroundTransparency = 0.2
                isOpen = true
            end
        end
    end)
end

---made by Revborn---
if isKeySaved() then
    task.spawn(function()
        createIntroScreen()
        task.wait(4)
        createHub()
        task.wait(2)
        createToggleButton()
    end)
else
    task.spawn(function()
        createIntroScreen()
        task.wait(4)
        
        local keyGui = Instance.new("ScreenGui")
        keyGui.Name = "LostKeySystem"
        keyGui.Parent = player.PlayerGui
        keyGui.ResetOnSpawn = false
        
        local frameSize = isMobile and UDim2.new(0, 420, 0, 220) or UDim2.new(0, 500, 0, 250)
        
        local frame = Instance.new("Frame")
        frame.Size = frameSize
        frame.Position = UDim2.new(0.5, -frameSize.X.Offset/2, 0.5, -frameSize.Y.Offset/2)
        frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
        frame.BorderSizePixel = 0
        frame.Parent = keyGui
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 20)
        corner.Parent = frame
        
        local stroke = Instance.new("UIStroke")
        stroke.Color = Color3.fromRGB(100, 100, 100)
        stroke.Thickness = 2
        stroke.Parent = frame
        
        local iconFrame = Instance.new("Frame")
        iconFrame.Size = UDim2.new(0, 60, 0, 60)
        iconFrame.Position = UDim2.new(0, 20, 0, 20)
        iconFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
        iconFrame.Parent = frame
        
        local iconCorner = Instance.new("UICorner")
        iconCorner.CornerRadius = UDim.new(0, 15)
        iconCorner.Parent = iconFrame
        
        local iconImg = Instance.new("ImageLabel")
        iconImg.Size = UDim2.new(1, -10, 1, -10)
        iconImg.Position = UDim2.new(0, 5, 0, 5)
        iconImg.BackgroundTransparency = 1
        iconImg.Image = "rbxassetid://122913243559549"
        iconImg.Parent = iconFrame
        
        local title = Instance.new("TextLabel")
        title.Size = UDim2.new(0, 200, 0, 30)
        title.Position = UDim2.new(0, 100, 0, 20)
        title.BackgroundTransparency = 1
        title.Text = "Lost Hub - Key System"
        title.TextColor3 = Color3.fromRGB(255, 255, 255)
        title.TextSize = isMobile and 22 or 26
        title.Font = Enum.Font.GothamBold
        title.TextXAlignment = Enum.TextXAlignment.Left
        title.Parent = frame
        
        local subtitle = Instance.new("TextLabel")
        subtitle.Size = UDim2.new(0, 200, 0, 20)
        subtitle.Position = UDim2.new(0, 100, 0, 50)
        subtitle.BackgroundTransparency = 1
        subtitle.Text = "By 生まれ変わった"
        subtitle.TextColor3 = Color3.fromRGB(150, 150, 150)
        subtitle.TextSize = isMobile and 12 or 14
        subtitle.Font = Enum.Font.Gotham
        subtitle.TextXAlignment = Enum.TextXAlignment.Left
        subtitle.Parent = frame
        
        local discordIcon = Instance.new("ImageButton")
        discordIcon.Size = UDim2.new(0, 30, 0, 30)
        discordIcon.Position = UDim2.new(1, -120, 0, 25)
        discordIcon.BackgroundColor3 = Color3.fromRGB(88, 101, 242)
        discordIcon.Image = "rbxassetid://10367063073"
        discordIcon.Parent = frame
        
        local discordIconCorner = Instance.new("UICorner")
        discordIconCorner.CornerRadius = UDim.new(0.5, 0)
        discordIconCorner.Parent = discordIcon
        
        local keyInput = Instance.new("TextBox")
        keyInput.Size = UDim2.new(1, -80, 0, 50)
        keyInput.Position = UDim2.new(0, 40, 0, 100)
        keyInput.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        keyInput.TextColor3 = Color3.fromRGB(255, 255, 255)
        keyInput.PlaceholderText = "Enter Key"
        keyInput.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
        keyInput.Text = ""
        keyInput.TextSize = isMobile and 18 or 20
        keyInput.Font = Enum.Font.Gotham
        keyInput.Parent = frame
        
        local inputCorner = Instance.new("UICorner")
        inputCorner.CornerRadius = UDim.new(0, 12)
        inputCorner.Parent = keyInput
        
        local checkKeyBtn = Instance.new("TextButton")
        checkKeyBtn.Size = UDim2.new(0, 180, 0, 40)
        checkKeyBtn.Position = UDim2.new(0, 40, 0, 170)
        checkKeyBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        checkKeyBtn.Text = "Check Key"
        checkKeyBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        checkKeyBtn.TextSize = isMobile and 16 or 18
        checkKeyBtn.Font = Enum.Font.GothamBold
        checkKeyBtn.Parent = frame
        
        local checkKeyCorner = Instance.new("UICorner")
        checkKeyCorner.CornerRadius = UDim.new(0, 10)
        checkKeyCorner.Parent = checkKeyBtn
        
        local copyKeyLinkBtn = Instance.new("TextButton")
        copyKeyLinkBtn.Size = UDim2.new(0, 180, 0, 40)
        copyKeyLinkBtn.Position = UDim2.new(0, 240, 0, 170)
        copyKeyLinkBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        copyKeyLinkBtn.Text = "Copy Key Link"
        copyKeyLinkBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        copyKeyLinkBtn.TextSize = isMobile and 16 or 18
        copyKeyLinkBtn.Font = Enum.Font.GothamBold
        copyKeyLinkBtn.Parent = frame
        
        local copyKeyCorner = Instance.new("UICorner")
        copyKeyCorner.CornerRadius = UDim.new(0, 10)
        copyKeyCorner.Parent = copyKeyLinkBtn
        
        local dragging = false
        local dragStart = nil
        local startPos = nil
        
        frame.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                startPos = frame.Position
                dragStart = input.Position
            end
        end)
        
        UserInputService.InputChanged:Connect(function(input)
            if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                local delta = input.Position - dragStart
                frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
        end)
        
        UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = false
            end
        end)
        
        checkKeyBtn.MouseButton1Click:Connect(function()
            local inputKey = keyInput.Text
            local validKey = false
            
            for _, key in pairs(REQUIRED_KEYS) do
                if inputKey == key then
                    validKey = true
                    break
                end
            end
            
            if validKey then
                saveKey(inputKey)
                keyGui:Destroy()
                createHub()
                task.spawn(function()
                    task.wait(2)
                    createToggleButton()
                end)
            else
                keyInput.Text = ""
                keyInput.PlaceholderText = "Invalid key! Try again..."
                checkKeyBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
                task.wait(2)
                keyInput.PlaceholderText = "Enter Key"
                checkKeyBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            end
        end)
        
        copyKeyLinkBtn.MouseButton1Click:Connect(function()
            if setclipboard then
                setclipboard("https://discord.gg/BvYXdXFwjV")
                keyInput.PlaceholderText = "Discord link copied! Get key from server"
                copyKeyLinkBtn.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
            else
                keyInput.PlaceholderText = "Visit: discord.gg/BvYXdXFwjV"
            end
            task.wait(3)
            keyInput.PlaceholderText = "Enter Key"
            copyKeyLinkBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        end)
        
        discordIcon.MouseButton1Click:Connect(function()
            if setclipboard then
                setclipboard("https://discord.gg/BvYXdXFwjV")
            end
        end)
        
        keyInput.FocusLost:Connect(function(enterPressed)
            if enterPressed then
                checkKeyBtn.MouseButton1Click:Fire()
            end
        end)
    end)
end

---made by Revborn---
player.CharacterAdded:Connect(function()
    task.wait(1)
    if noclipEnabled then
        enableNoclip()
    end
    if infiniteJumpEnabled then
        enableInfiniteJump()
    end
    if killAuraEnabled then
        startKillAura()
    end
    
    updatePlayerSpeed(playerSpeed)
    updatePlayerJumpPower(playerJumpPower)
end)

---made by Revborn---
